///////////////////////////////////////////////////////////////////////////////
// Raspberry Pi GPIO Interface
// ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
// File: dev.h
// PA Consulting - Lawrence Jones
///////////////////////////////////////////////////////////////////////////////

#ifndef DEV_HEADER_INC
#define DEV_HEADER_INC

///////////////////////////////////////////////////////////////////////////////
// TYPEDEFS / STRUCTS
///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// Enums   //////////////////////////////////////////////////
// Define enum for accel and gyro
typedef enum {GYRO, ACCEL} type_t;
// Define enum for sensor read target
typedef enum {HOST, AUX, FIFO} target_t;
// Enum for all model numbers
typedef enum {MPU3300, ITG3050, L3G4200D, PCA9548A} model_t;

/////////////////////////////////////////////////////////////
// Function Typedefs   //////////////////////////////////////
// Required for definitions
typedef struct Sensor Sensor;
typedef struct Axes Axes;
typedef struct ConfigFunctionMap ConfigFunctionMap;
typedef struct Mux Mux;
typedef struct MuxNetwork MuxNetwork;

///////////////////////////////////////////////////////////////////////////////
// DEVS INTERFACE
///////////////////////////////////////////////////////////////////////////////

// Print to stdout a muxnetwork
void mux_network_print(Mux *m);

#endif
